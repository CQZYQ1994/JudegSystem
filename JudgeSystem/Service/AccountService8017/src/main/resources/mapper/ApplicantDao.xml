<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.judgesystem.dao.ApplicantDao">
    <!--  <resultMap id="userMap" type="User">
          <id column="id" property="id"></id>
          <result column="account" property="account"></result>
          <result column="password" property="password"></result>
          <result column="name" property="name"></result>
          <result column="email" property="email"></result>
          <result column="department" property="department"></result>
          <result column="position" property="position"></result>
         &lt;!&ndash;<association property="role" select="com.judgesystem.dao.RoleDao.findById" column="role_id"></association>&ndash;&gt;
          <association property="role" javaType="Role">
              <id property="id" column="role_id"></id>
              <result property="role" column="role"></result>
          </association>
      </resultMap>-->

    <!-- <select id="findAll" resultMap="userMap">
         select u.id id,u.account,u.password,u.name,u.email,u.department,u.position,r.id role_id,r.role from user u,role r where u.role_id=r.id order by id limit #{param1},#{param2}
      </select>-->
    <select id="login" resultType="Applicant">
        select * from applicant where account=#{param1} and password=#{param2}
    </select>
    <!--<select id="count" resultType="int">
        select count(*) from user
    </select>
    <select id="findById"  resultMap="userMap">
        select id,account,password,name,email,department,position,role_id from user where id = #{id}
    </select>
    <insert id="save" parameterType="User">
        insert into user (account,password,name,email,department,position,role_id) values(#{account},#{password},#{name},#{email},#{department},#{position},#{role.id})
    </insert>
    <update id="update" parameterType="User">
        update user set account = #{account},password = #{password},name = #{name},email = #{email},department = #{department},position = #{position},role_id = #{role.id} where id=#{id}
    </update>
    <delete id="deleteById" parameterType="int">
        delete from user where id = #{id}
    </delete>-->
</mapper>