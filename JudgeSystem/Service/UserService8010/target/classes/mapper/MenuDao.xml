<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.judgesystem.dao.MenuDao">
    <resultMap id="BaseResultMap" type="Menu" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="component" property="component" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="iconCls" property="iconCls" jdbcType="VARCHAR" />
        <result column="parent_id" property="parent_id" jdbcType="INTEGER" />
        <result column="show" property="show" jdbcType="BIT" />
        <association property="meta" javaType="Meta">
            <result column="keep_alive" property="keep_alive" jdbcType="BIT" />
            <result column="require_auth" property="require_auth" jdbcType="BIT" />
        </association>
    </resultMap>
    <resultMap id="Menus2" type="Menu" extends="BaseResultMap">
        <collection property="children" ofType="Menu">
            <id column="id2" property="id" jdbcType="INTEGER" />
            <result column="url2" property="url" jdbcType="VARCHAR" />
            <result column="path2" property="path" jdbcType="VARCHAR" />
            <result column="component2" property="component" jdbcType="VARCHAR" />
            <result column="name2" property="name" jdbcType="VARCHAR" />
            <result column="iconCls2" property="iconCls" jdbcType="VARCHAR" />
            <result column="parent_id2" property="parent_id" jdbcType="INTEGER" />
            <result column="show2" property="show" jdbcType="BIT" />
            <association property="meta" javaType="Meta">
                <result column="keep_alive2" property="keep_alive" jdbcType="BIT" />
                <result column="require_auth2" property="require_auth" jdbcType="BIT" />
            </association>
        </collection>
    </resultMap>
   <!-- <resultMap id="MenuWithRole" type="Menu" extends="BaseResultMap">
        <collection property="roles" ofType="Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnameZh" property="nameZh"/>
        </collection>
    </resultMap>-->
 <!--   <resultMap id="MenuWithChildren" type="Menu" extends="BaseResultMap">
        <id column="id1" property="id"/>
        <result column="name1" property="name"/>
        <collection property="children" ofType="Menu">
            <id column="id2" property="id"/>
            <result column="name2" property="name"/>
            <collection property="children" ofType="Menu">
                <id column="id3" property="id"/>
                <result column="name3" property="name"/>
            </collection>
        </collection>
    </resultMap>-->
 <!--   <select id="getMidsByRid" resultType="java.lang.Integer">
    select mid from menu_role where rid=#{rid};
  </select>
    <select id="getAllMenus" resultMap="MenuWithChildren">
    select m1.`id` as id1,m1.`name` as name1,m2.`id` as id2,m2.`name` as name2,m3.`id` as id3,m3.`name` as name3 from menu m1,menu m2,menu m3 where m1.`id`=m2.`parentId` and m2.`id`=m3.`parentId` and m3.`enabled`=true order by m1.`id`,m2.`id`,m3.`id`
  </select>
    <select id="getAllMenusWithRole" resultMap="MenuWithRole">
    select m.*,r.`id` as rid,r.`name` as rname,r.`nameZh` as rnameZh from menu m,menu_role mr,role r where m.`id`=mr.`mid` and mr.`rid`=r.`id` order by m.`id`
  </select>-->
    <select id="getMenusByUserId" resultMap="Menus2">
    select distinct m1.*,m2.`id` as id2,m2.`component` as component2,m2.`show` as show2,m2.`iconCls` as iconCls2,m2.`keep_alive` as keep_alive2,m2.`name` as name2,m2.`parent_id` as parent_id2,m2.`require_auth` as require_auth2,m2.`path` as path2,m2.`url` as url2 from menu m1,menu m2,user_role ur,menu_role mr where m1.`id`=m2.`parent_id` and ur.`user_id`=#{user_id} and ur.`role_id`=mr.`role_id` and mr.`menu_id`=m2.`id` order by m1.`id`,m2.`id`
  </select>
   <!-- <sql id="Base_Column_List" >
    id, url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from menu
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="Menu" >
    insert into menu (id, url, path,
      component, name, iconCls,
      keepAlive, requireAuth, parentId,
      enabled)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconcls,jdbcType=VARCHAR},
      #{keepalive,jdbcType=BIT}, #{requireauth,jdbcType=BIT}, #{parentid,jdbcType=INTEGER},
      #{enabled,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="Menu" >
        insert into menu
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="url != null" >
                url,
            </if>
            <if test="path != null" >
                path,
            </if>
            <if test="component != null" >
                component,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="iconcls != null" >
                iconCls,
            </if>
            <if test="keepalive != null" >
                keepAlive,
            </if>
            <if test="requireauth != null" >
                requireAuth,
            </if>
            <if test="parentid != null" >
                parentId,
            </if>
            <if test="enabled != null" >
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="url != null" >
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null" >
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null" >
                #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconcls != null" >
                #{iconcls,jdbcType=VARCHAR},
            </if>
            <if test="keepalive != null" >
                #{keepalive,jdbcType=BIT},
            </if>
            <if test="requireauth != null" >
                #{requireauth,jdbcType=BIT},
            </if>
            <if test="parentid != null" >
                #{parentid,jdbcType=INTEGER},
            </if>
            <if test="enabled != null" >
                #{enabled,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Menu" >
        update menu
        <set >
            <if test="url != null" >
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null" >
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null" >
                component = #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconcls != null" >
                iconCls = #{iconcls,jdbcType=VARCHAR},
            </if>
            <if test="keepalive != null" >
                keepAlive = #{keepalive,jdbcType=BIT},
            </if>
            <if test="requireauth != null" >
                requireAuth = #{requireauth,jdbcType=BIT},
            </if>
            <if test="parentid != null" >
                parentId = #{parentid,jdbcType=INTEGER},
            </if>
            <if test="enabled != null" >
                enabled = #{enabled,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="Menu" >
    update menu
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      iconCls = #{iconcls,jdbcType=VARCHAR},
      keepAlive = #{keepalive,jdbcType=BIT},
      requireAuth = #{requireauth,jdbcType=BIT},
      parentId = #{parentid,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>-->

</mapper>